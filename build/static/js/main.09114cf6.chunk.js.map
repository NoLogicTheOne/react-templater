{"version":3,"sources":["logo.svg","model/data/initialState.js","model/constants/ActionTypes.js","model/reducer.js","Template/Template.js","Table/Rows/Phrase/Word/Word.js","Table/Rows/Phrase/Phrase.js","Table/Rows/Rows.js","Table/Table.js","Keywords/Keywords.js","App.js","model/actions/phraseActions.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","data","import_area","template","phrases","export_area","last_template","FILL_IMPORT","EDIT_TEMPLATE","GENERATE_TABLE","KEYWORD_CHANGE","REMARK_WORD","COLOR_PHRASE","DELETE_EXPORT","REVERSE_KEYWORD","result","state","arguments","length","undefined","action","hash","value","word","based_template","input_area","type","types","_phraseExecute","phrase","Object","objectSpread","words","map","w","marker","setPhraseDepencies","keyword","_setTitle","key","createPhrases","colored","newState","split","reverse","c","trim","join","newValue","push","minuses","replace","phrasesArray","filter","reduce","acc","callback","hashed","_len","args","Array","_key3","apply","concat","k","newPhrase","fullKeyword","_divideKeyword2","_divideKeyword","light","hashCode","createPhrase","str","i","charCodeAt","_setLength","_setLight","new_words","pastePhraseInTemplate","text","_setMarker","curr","isEqualWords","len","b_template","bolderLength","realLength","word1","word2","cutEnd","ends","end","withoutEnd","substring","Template","_ref","onChange","generateTable","react_default","a","createElement","className","e","target","onClick","preventDefault","Word","remarkWord","onContextMenu","Phrase","onCheck","index","Phrase_Word_Word","assign","createWords","Rows","onKeywordChange","reverseKeyword","row_array","createRow","idx","Rows_Phrase_Phrase","createRows","defaultProps","Table","props","Table_Rows_Rows","Keywords","onInputChange","name","id","cols","rows","App","_this$props","this","fillImport","colorPhrase","deleteExport","onTemplateChange","scrolling","src_Keywords_Keywords","src_Template_Template","src_Table_Table","onSubmit","Component","connect","stateProps","dispatchProps","dispatch","AC","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reducer","combineReducers","reducers","store","createStore","loaded","localStorage","templater","JSON","parse","loadState","subscribe","saved","stringify","getState","setItem","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.09114cf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const data = {\r\n  import_area: \"фраза 1, фраза-2 с -минусами, фраза 3\",\r\n  template: \"шаблон для #фраза хз#\",\r\n  phrases: {},\r\n  export_area: \"\",\r\n  last_template: \"\"\r\n}","export const FILL_IMPORT = \"FILL_IMPORT\"\r\nexport const EDIT_TEMPLATE = \"EDIT_TEMPLATE\"\r\nexport const GENERATE_TABLE = \"GENERATE_TABLE\"\r\nexport const KEYWORD_CHANGE = \"KEYWORD_CHANGE\"\r\nexport const REMARK_WORD = \"REMARK_WORD\"\r\nexport const COLOR_PHRASE = \"COLOR_PHRASE\"\r\nexport const FILL_EXPORT = \"FILL_EXPORT\"\r\nexport const DELETE_EXPORT = \"DELETE_EXPORT\"\r\nexport const REVERSE_KEYWORD = \"REVERSE_KEYWORD\"\r\n\r\nexport const MAX_LENGTH = 35;","import {data} from \"./data/initialState.js\"\r\nimport * as types from \"./constants/ActionTypes.js\" \r\n\r\nexport const phrases = (state = data.phrases, action) => {\r\n\tlet {hash, value, word, based_template, input_area} = action\r\n\tlet result\r\n\r\n\tswitch (action.type) {\r\n\t\tcase types.REMARK_WORD: \r\n\t\t\tresult = _phraseExecute(state, hash, (phrase) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...phrase,\r\n\t\t\t\t\twords: phrase.words.map(w => {\r\n      \t\t\t\t\treturn w.word === word\r\n\t\t\t        \t\t? {...w, marker: !w.marker}\r\n\t\t\t\t\t        : {...w}\r\n\t\t\t    \t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\treturn setPhraseDepencies(result, hash, based_template)\r\n\t\t\r\n\t\tcase types.KEYWORD_CHANGE:\r\n\t\t\tif(based_template === undefined) return {...state}\r\n\t\t\t\r\n\t\t\tresult = _phraseExecute(state, hash, (phrase) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...phrase,\r\n\t\t\t\t\tkeyword: value\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tresult = _setTitle(result, hash, based_template)\r\n\t\t\treturn setPhraseDepencies(result, hash, based_template)\r\n\t\t\r\n\t\tcase types.GENERATE_TABLE:\r\n\t\t\tresult = createPhrases(input_area, based_template)\r\n\t\t\t\r\n\t\t\tfor (let key in result) {\r\n\t\t\t\tresult = _setTitle(result, key, result[key].based_template)\r\n\t\t\t\tresult = setPhraseDepencies(result, key, result[key].based_template)\r\n\t\t\t}\r\n\r\n\t\t\treturn result\r\n\t\t\r\n\t\tcase types.COLOR_PHRASE:\r\n\t\t\treturn _phraseExecute(state, hash, (phrase) => {\r\n\t\t\t\tlet colored = !phrase.colored\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...phrase,\r\n\t\t\t\t\tcolored\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\tcase types.DELETE_EXPORT:\r\n\t\t\tlet newState = {}\r\n\t\t\tfor (let key in state){\r\n\t\t\t\tif (!state[key].colored){\r\n\t\t\t\t\tnewState[key] = state[key]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn newState\r\n\t\t\r\n\t\tcase types.REVERSE_KEYWORD:\r\n\t\t\tresult = _phraseExecute(state, hash, phrase => ({\r\n\t\t\t\t...phrase,\r\n\t\t\t\tkeyword: phrase.keyword\r\n\t\t\t\t\t.split(\" \")\r\n\t\t\t\t\t.reverse()\r\n\t\t\t\t\t.map(c => c.trim())\r\n\t\t\t\t\t.join(\" \")\r\n\t\t\t}))\r\n\r\n\t\t\treturn _setTitle(result, hash, state[hash].based_template)\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const import_area = (state = data.import_area, action) => {\r\n\tlet {value, phrases} = action\r\n\tlet newValue;\r\n\r\n\tswitch (action.type) {\r\n\t\tcase types.FILL_IMPORT:\r\n\t\t\treturn value\r\n\t\t\r\n\t\tcase types.KEYWORD_CHANGE:\r\n\t\t\tnewValue = []\r\n\r\n\t\t\tfor(let key in phrases){\r\n\t\t\t\tnewValue.push(\r\n\t\t\t\t\tphrases[key].keyword\r\n\t\t\t\t\t+ \" \" \r\n\t\t\t\t\t+ phrases[key].minuses\r\n\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\treturn newValue\r\n\t\t\t\t.join(\"\\n\")\r\n\t\t\t\t.trim()\r\n\t\t\t\r\n\t\t\r\n\t\tcase types.DELETE_EXPORT:\r\n\t\t\tnewValue = []\r\n\t\t\t\r\n\t\t\tfor(let key in phrases){\r\n\t\t\t\tif(!phrases[key].colored)\r\n\t\t\t\t\tnewValue.push(\r\n\t\t\t\t\t\tphrases[key].keyword\r\n\t\t\t\t\t\t+ \" \" \r\n\t\t\t\t\t\t+ phrases[key].minuses\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\t\treturn newValue\r\n\t\t\t\t.join(\"\\n\")\r\n\t\t\t\t.trim()\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const template = (state = data.template, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase types.EDIT_TEMPLATE:\r\n\t\t\treturn action.value.replace(\"№\", \"#\")\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const export_area = (state = data.export_area, action) => {\r\n\tlet {hash, phrases} = action\r\n\r\n\tswitch (action.type) {\r\n\t\tcase types.COLOR_PHRASE:\r\n\t\t\tlet phrasesArray = []\r\n\t\t\t\r\n\t\t\tphrases[hash] = {\r\n\t\t\t\t...phrases[hash],\r\n\t\t\t\tcolored: !phrases[hash].colored\r\n\t\t\t}\r\n\r\n\t\t\tfor(let key in phrases) {\r\n\t\t\t\tphrasesArray.push(phrases[key])\r\n\t\t\t}\r\n\r\n\t\t\treturn phrasesArray\r\n\t\t\t\t.filter(p => p.colored)\r\n\t\t\t\t.reduce((acc, phrase) => {\r\n\t\t\t\t\treturn acc \r\n\t\t\t\t\t\t+ phrase.keyword\r\n\t\t\t\t\t\t+ \" \"\r\n\t\t\t\t\t\t+ phrase.minuses\r\n\t\t\t\t\t\t+ \"\\n\"\r\n\t\t\t\t}, \"\")\r\n\t\t\t\t.trim()\r\n\t\t\t\t\r\n\t\tcase types.DELETE_EXPORT:\r\n\t\t\treturn \"\"\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const last_template = (state = data.last_template, action) => {\r\n\tswitch (action.type) {\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n/*\r\nоснова для многих функций\r\nпо паре объект фраз-хеш выполняет работу над объектом фразы\r\nпринимает (помимо пары) колбек для работы\r\n*/\r\nconst _phraseExecute = (phrases, hash, callback, ...args) => {\r\n  let hashed = {...phrases}\r\n  hashed[hash] = callback(hashed[hash], ...args)\r\n\r\n  return hashed\r\n}\r\n\r\n/*\r\nразделяет фразу на ключевое слово и минус слова\r\nпринимает запись из поля для ввода ключевиков\r\nвозвращает объект, содержащий ключевую фразу без минус слов и минусы раздельно)\r\n*/\r\nconst _divideKeyword = (fullKeyword) => {\r\n\tlet keyword = fullKeyword\r\n\t\t.replace(/\\s-.*$/, \"\")\r\n\t\t.trim()\r\n\tlet minuses = fullKeyword\r\n\t\t.replace(keyword, \"\")\r\n\t\t.trim()\r\n\r\n\treturn {\r\n\t\tkeyword,\r\n\t\tminuses\r\n\t}\r\n}\r\n\r\n/*создает объект фразы по ключевой фразе и шаблону*/\r\nconst createPhrase = (fullKeyword, template) => {\r\n\tlet result = {}\r\n\tlet {keyword, minuses} = _divideKeyword(fullKeyword)\r\n\t\r\n\tlet phrase = {\r\n\t\tbased_template: template,\r\n\t\tkeyword,\r\n\t\tcolored: false,\r\n\t\tminuses,\r\n\t\tlength: 0,\r\n\t\tlight: 0,\r\n\t\twords: []\r\n\t}\r\n\r\n\tresult[\"p\" + hashCode(keyword)] = phrase\r\n\treturn result\r\n}\r\n\r\n/*принимает значение поля для ввода и шаблон, \r\nвозвращает готовый объект фраз*/\r\nconst createPhrases = (input_area, template) => {\r\n\tlet keywords = input_area\r\n\t\t.split(/(\\n|,)/g)\r\n\t\t.filter(k => k !== undefined)\r\n\t\t.filter(k => k !== null)\r\n\t\t.filter(k => k !== \",\")\r\n\t\t.map(k => k.trim())\r\n\t\t.filter(k => k !== \"\")\r\n\r\n\treturn keywords.reduce((phrases, keyword) => {\r\n\t\tlet newPhrase = createPhrase(keyword, template)\r\n\t\treturn {\r\n\t\t\t...phrases,\r\n\t\t\t...newPhrase\r\n\t\t}\r\n\t}, {})\r\n}\r\n\r\n/*для создания уникального идентификатора \r\nфразы для его записи в объект состояния на \r\nосновании */\r\nconst hashCode = str => {\r\n    let hash = 0;\r\n    if (str.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < str.length; i++) {\r\n        let char = str.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + char;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\n/*объединеие небольшого количества магии для удобной работы\r\nкомбо _setLength и _setLight*/\r\nconst setPhraseDepencies = (phrases, hash, based_template) => {\r\n\tlet result = {...phrases}\r\n\tresult = _setLength(result, hash, based_template)\r\n\tresult = _setLight(result, hash)\r\n\r\n\treturn result\r\n}\r\n\r\n/*устанавливает заголовок объявления \r\nпринимает пару объет фраз-хеш и шаблон\r\nвозвращает новый объект фраз*/\r\nconst _setTitle = (phrases, hash, based_template) => {\r\n\t\r\n\treturn _phraseExecute(phrases, hash, (phrase) => {\r\n\t\tlet {keyword} = phrase\r\n\t\tlet {text} = pastePhraseInTemplate(keyword, based_template)\r\n\t\t\r\n\t\tlet new_words = text\r\n\t\t\t.split(\" \")\r\n\t\t\t.filter(w => w !== \"\")\r\n\t\t\t.map(word => ({\r\n\t\t\t\tword,\r\n\t\t\t\tmarker: _setMarker(keyword, word)\r\n\t\t\t}))\r\n\r\n\t\treturn {\r\n\t\t\t...phrase,\r\n\t\t\twords: new_words\r\n\t\t}\r\n\t})\r\n}\r\n\r\n/*проверяет, есть ли в ключевой фразе слова, одинаковые по смыслу сбазовым словом объекта WORD\r\nпринимает ключевую фразу и слово \r\nвозвращает булевое значение (да/нет)*/\r\nconst _setMarker = (keyword, word) => {\r\n\treturn keyword\r\n\t\t.split(\" \")\r\n\t\t.reduce((acc, curr) => \r\n\t\t\tacc || isEqualWords(word, curr), \r\n\t\tfalse)\r\n}\r\n\r\n/*принимает фразу и шаблон для ключевого слова\r\nвозвращает фразу, вставленную в шаблон (не длиннее MAX_LENGTH)\r\nи длину фразы, вставленную в шаблон*/\r\nconst pastePhraseInTemplate = (phrase, based_template) => {\r\n\tlet text = based_template.replace(/#(.)*#/, phrase)\r\n\tlet len = text\r\n\t\t.replace(/(!|\\?|\\.)$/, \"\")\r\n\t\t.length\r\n\r\n\tif(len > types.MAX_LENGTH){\r\n\t\ttext = based_template.replace(/#/g, \"\")\r\n\t}\r\n\t\r\n\treturn {\r\n\t\ttext,\r\n\t\tlen\r\n\t}\r\n}\r\n\r\n/*определяет и устанавливает длину фразы(реальную) \r\nпо паре объект фраз-хеш и шаблону*/\r\nconst _setLength = (phrases, hash, b_template) => {\r\n\treturn _phraseExecute(phrases, hash, (phrase) => {\r\n\t\tlet {len} = pastePhraseInTemplate(phrase.keyword, b_template)\r\n\t\treturn {\r\n\t\t\t...phrase,\r\n\t\t\tlength: len\r\n\t\t}\r\n\t})\r\n}\r\n\r\n/*\r\nпринимает объект фраз и хеш фразы, \r\nнад коорой производится действие\r\nопределяет суммарную длину жирных слов +1\r\nопределяет суммарную длину всех слов +1\r\nвозвращает объект фраз(для редьюсера) с установленным значением жирности\r\n*/\r\nconst _setLight = (phrases, hash) => {\r\n\treturn _phraseExecute(phrases, hash, (phrase) => {\r\n\t\tlet bolderLength = phrase\r\n\t\t\t.words\r\n\t\t\t.reduce((acc, curr) => {\r\n\t\t\t\treturn curr.marker\r\n\t\t\t\t\t? (curr.word.length + acc + 1)\r\n\t\t\t\t\t: acc\r\n\t\t\t}, -1)\r\n\r\n\t\tlet realLength = phrase\r\n\t\t\t.words\r\n\t\t\t.reduce((acc, curr) => {\r\n\t\t\t\treturn curr.word.length + acc + 1\r\n\t\t\t}, -1)\r\n\r\n\t\treturn {\r\n\t\t\t...phrase,\r\n\t\t\tlight: bolderLength / realLength * 100 | 0\r\n\t\t}\r\n\t})\r\n}\r\n\r\n/*принимает два слова\r\nвозвращает результат сравнения по смыслу (без учета окончания)*/\r\nconst isEqualWords = (word1, word2) => {\r\n\treturn cutEnd(word1) === cutEnd(word2)\r\n}\r\n\r\n/*\r\nотрезает у принимаемого слова окончание для определения \r\nодинаковых по смыслу слов\r\nвозвращает слово без окончания\r\n*/\r\nconst cutEnd = (word) => {\r\n\tfor (let i = 0, len = ends.length; i < len; i++) {\r\n\t\tlet end = ends[i];\r\n\t\tlet withoutEnd = word.substring(0, word.length - end.length)\r\n\t\tlet wordsEnd = word.substring(word.length - end.length)\r\n\t\tif(end === wordsEnd){\r\n\t\t\treturn withoutEnd\r\n\t\t}\r\n\t}\r\n\treturn word\r\n}\r\n\r\nconst ends = [\r\n\t\"ему\", \"ыми\", \"ими\", \"ами\", \"ому\", \"ого\", \"ому\", \"ему\",\r\n\t\"им\", \"ым\", \"ей\", \"ой\", \"ою\", \"юю\", \"ые\", \"ых\", \"их\",\r\n\t\"ые\", \"ие\", \"ом\", \"ем\", \"ая\", \"ое\", \"яя\", \"ую\", \"ый\",\r\n\t\"о\", \"а\", \"я\", \"е\"\r\n]","import React from 'react';\r\nimport './Template.css';\r\n\r\nconst Template = ({template, onChange, generateTable, import_area}) => {\r\n\tlet onButtonClick = (e) => {\r\n\t\te.preventDefault()\r\n\t\tgenerateTable(import_area, template)\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"templater__template\">\r\n\t\t\t<input className=\"templater__template_input\"\r\n\t\t\t\t   value={template}\r\n\t\t\t\t   onChange={e => onChange(e.target.value)}\r\n\t\t\t\t   />\r\n\t    \t<span className=\"templater__template_length\">\r\n\t    \t\t{template\r\n\t    \t\t\t.replace(/#/g, \"\")\r\n\t    \t\t\t.replace(/(!|\\?|\\.)$/, \"\")\r\n\t\t\t\t\t.trim()\r\n\t    \t\t\t.length\r\n\t    \t\t}\r\n\t    \t</span>\r\n\t    \t<input type=\"submit\" \r\n\t    \t\t   value=\"MIX\"\r\n\t    \t\t   onClick={onButtonClick}\r\n\t    \t       className=\"templater__template_mix\"/>\r\n\t\t</div>\r\n\t);\r\n  \r\n}\r\n\r\nexport default Template;","import React from 'react';\r\nimport './Word.css';\r\n\r\nconst Word = ({word, marker, remarkWord, hash, template}) => {\r\n    // let _span;\r\n\r\n    const createText = () => {\r\n    \treturn marker \r\n    \t\t? (<b>{word} </b>) \r\n    \t\t: (<span>{word} </span>)\r\n    }\r\n\r\n    const onContextMenu = (e) => {\r\n        e.preventDefault();\r\n        remarkWord(hash, word, template);\r\n    }\r\n\r\n    return (\r\n\t\t<span className=\"templater__word\"\r\n              onContextMenu={onContextMenu}>\r\n\t\t\t{createText()}\r\n\t\t</span>\r\n    );\r\n}\r\n\r\n// Word.defaultProps = {\r\n//     \tword: \"default word\",\r\n//     \tmarker: true\r\n//     }\r\n\r\nexport default Word;","import React from 'react';\r\n\r\nimport Word from \"./Word/Word.js\";\r\n\r\nimport './Phrase.css';\r\n\r\nconst Phrase = ({phrase, hash, remarkWord, onCheck}) => {\r\n    \r\n    const createWords = (phrase) => {\r\n        return phrase.words.map((word, index) => (\r\n            <Word key={index}\r\n                  hash={hash}\r\n                  template={phrase.based_template}\r\n                  remarkWord={remarkWord}\r\n                  {...word}/>\r\n        ))\r\n    }\r\n\r\n    return (\r\n  \t\t<div className=\"templater__phrase\"\r\n           onClick={e => onCheck(hash)}>\r\n        {createWords(phrase)}\r\n  \t\t</div>\r\n    );\r\n}\r\n\r\nexport default Phrase;","import React from 'react';\n\nimport Phrase from \"./Phrase/Phrase.js\";\n\nconst Rows = ({\n  phrases, \n  onKeywordChange, \n  remarkWord,\n  reverseKeyword, \n  onCheck}) => {\n  let row_array = [];\n\n  const createRow = (phrase, idx) => {\n    return (\n      <tr key={idx} className={phrase.colored ? \"colored\" : \"default\"}>\n        <td className=\"templater__table_keyword\">\n          <input\n            className=\"templater__table_input\"\n            onChange={e => onKeywordChange(idx, e.target.value, phrase.based_template)} \n            value={phrase.keyword} />\n        </td>\n        <td>\n          <span onClick={e => reverseKeyword(idx)}>&hArr;</span>\n        </td>\n        <td>\n          <Phrase phrase={phrase}\n                  hash={idx}\n                  onCheck={onCheck}\n                  remarkWord={remarkWord}/>\n        </td>\n        <td className=\"templater__table_length\">\n          {phrase.length}\n        </td>\n        <td className=\"templater__table_ligth\">\n          {phrase.light}\n        </td>\n      </tr>\n      )\n  }\n\n  const createRows = () => {\n    for (let phrase in phrases) {\n      row_array.push(createRow(phrases[phrase], phrase))\n    }\n\n    return row_array.map(curr => curr)\n  }\n\n  return (\n    <tbody>\n      {createRows()}\n    </tbody>\n  )\n}\n\nRows.defaultProps = {\n  phrases: []\n}\n\nexport default Rows;","import React from 'react';\r\n\r\nimport Rows from \"./Rows/Rows.js\";\r\n\r\nimport \"./Table.css\";\r\n\r\nconst Table = (props) => {\r\n    return (\r\n      <table className=\"templater__table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Keyword</th>\r\n            <th></th>\r\n            <th>Title</th>\r\n            <th>length</th>\r\n            <th>light</th>\r\n          </tr>\r\n        </thead>\r\n        <Rows {...props}/>\r\n      </table>\r\n    );\r\n\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nimport \"./Keywords.css\";\r\n\r\nconst Keywords = ({import_area, onInputChange}) => {\r\n\r\n\tconst creator = () => {\r\n\t\treturn (\r\n\t\t\t<textarea name=\"keywords\" \r\n\t\t\t\t\t  id=\"\" \r\n\t\t\t\t\t  cols=\"30\" \r\n\t\t\t\t\t  rows=\"10\"\r\n\t\t\t\t\t  onChange={e => onInputChange(e.target.value)}\r\n\t\t\t\t\t  value={import_area}/>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"templater__keywords\">\r\n\t\t\t{creator()}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Keywords;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport Template from \"./Template/Template.js\";\r\nimport Table from \"./Table/Table.js\";\r\nimport Keywords from \"./Keywords/Keywords.js\";\r\n\r\nimport * as AC from \"./model/actions/phraseActions.js\"\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    let {data, //state object\r\n         remarkWord, //bolding words\r\n         fillImport, //fill import_area\r\n         onKeywordChange, //edit keywords in phrases\r\n         generateTable, //click the Mix button\r\n         colorPhrase, //click checkbox in rows\r\n         deleteExport, //delete all exported from table\r\n         reverseKeyword, //reverse keyword in a phrase\r\n         onTemplateChange} = this.props\r\n\r\n    return (\r\n      <div className=\"App\" scrolling=\"no\">\r\n        <Keywords onInputChange={fillImport}\r\n                  import_area={data.import_area}/>\r\n        <Template template={data.template}\r\n                  import_area={data.import_area}\r\n                  generateTable={generateTable}\r\n                  onChange={onTemplateChange} />\r\n        <Table\r\n          remarkWord={remarkWord}\r\n          onKeywordChange={onKeywordChange}\r\n          onCheck={colorPhrase}\r\n          reverseKeyword={reverseKeyword}\r\n          phrases={data.phrases}/>\r\n        <textarea\r\n          rows=\"20\"\r\n          onChange={e=>e}\r\n          value={data.export_area}\r\n        />\r\n        <input type=\"submit\" \r\n               value=\"EXCLUDE\"\r\n               onSubmit={e => e.preventDefault()}\r\n               className=\"templater__cleaner\"\r\n               onClick={deleteExport}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state\r\n})\r\n\r\nconst mergeProps = (stateProps, dispatchProps) => {\r\n  let {data} = stateProps\r\n  let {dispatch} = dispatchProps\r\n\r\n  return {\r\n    data,\r\n    onTemplateChange: (value) => {\r\n      dispatch(AC.editTemplate(value))\r\n    },\r\n    remarkWord: (hash, word, based_template) => {\r\n      dispatch(AC.remarkWord(hash, word, based_template))\r\n    },\r\n    onKeywordChange: (hash, value, b_template) => {\r\n      const { phrases } = data\r\n      dispatch(AC.keywordChange(hash, value, b_template, phrases))\r\n    },\r\n    fillImport: (value) => {\r\n      dispatch(AC.fillImport(value))\r\n    },\r\n    generateTable: (input_area, template) => {\r\n      dispatch(AC.generateTable(input_area, template))\r\n    },\r\n    colorPhrase: (hash) => {\r\n      dispatch(AC.colorPhrase(data.phrases, hash))\r\n    },\r\n    deleteExport: () => {\r\n      dispatch(AC.deleteExport(data.phrases))\r\n    },\r\n    reverseKeyword: (hash) => {\r\n      dispatch(AC.reverseKeyword(data.phrases, hash))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  null,\r\n  mergeProps)(App);\r\n\r\n","import * as types from \"../constants/ActionTypes.js\"\r\n\r\nexport function remarkWord(hash, word, based_template) {\r\n\treturn {\r\n\t\ttype: types.REMARK_WORD,\r\n\t\thash,\r\n\t\tword,\r\n\t\tbased_template\r\n\t}\r\n}\r\n\r\nexport function fillImport(value) {\r\n\treturn{\r\n\t\ttype: types.FILL_IMPORT,\r\n\t\tvalue\r\n\t}\r\n}\r\n\r\nexport function editTemplate(value) {\r\n\treturn {\r\n\t\ttype: types.EDIT_TEMPLATE,\r\n\t\tvalue\r\n\t}\r\n}\r\n\r\nexport function keywordChange(hash, value, based_template, phrases) {\r\n\treturn {\r\n\t\ttype: types.KEYWORD_CHANGE,\r\n\t\thash,\r\n\t\tvalue,\r\n\t\tbased_template,\r\n\t\tphrases\r\n\t}\r\n}\r\n\r\nexport function generateTable(input_area, based_template){\r\n\treturn {\r\n\t\ttype: types.GENERATE_TABLE,\r\n\t\tinput_area,\r\n\t\tbased_template\r\n\t}\r\n}\r\n\r\nexport function colorPhrase(phrases, hash){\r\n\treturn {\r\n\t\ttype: types.COLOR_PHRASE,\r\n\t\thash,\r\n\t\tphrases\r\n\t}\r\n}\r\n\r\nexport function deleteExport(phrases){\r\n\treturn {\r\n\t\ttype: types.DELETE_EXPORT,\r\n\t\tphrases\r\n\t}\r\n} \r\n\r\nexport function reverseKeyword(phrases, hash){\r\n\treturn {\r\n\t\ttype: types.REVERSE_KEYWORD,\r\n\t\tphrases,\r\n\t\thash\r\n\t}\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore, combineReducers} from 'redux'\n\nimport * as reducers from \"./model/reducer.js\"\nimport {data} from \"./model/data/initialState.js\"\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './index.css'\n\nconst reducer = combineReducers(reducers, data)\nconst store = createStore(reducer, loadState())\n\nconst saveState = () => {\n\tlet saved = JSON.stringify(store.getState())\n\tif(!localStorage.templater){\n\t\tlocalStorage.setItem(\"templater\", saved)\n\t} else {\n\t\tlocalStorage.templater = saved\n\t}\n}\n\nfunction loadState() {\n\tlet loaded = data\n\n\tif(localStorage.templater !== undefined){\n\t\tloaded = JSON.parse(localStorage.templater)\n\t}\n\n\treturn loaded\n}\n\nstore.subscribe(saveState)\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n// serviceWorker.unregister();\n"],"sourceRoot":""}